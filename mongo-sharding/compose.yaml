version: '3'
services:
  mongo-sharding:
    container_name: mongo-sharding
    build:
      context: api_app
      dockerfile: Dockerfile
    image: kazhem/pymongo_api:1.0.0
    depends_on:
      - mongos_router
    ports:
      - ${APP_PORT}:${APP_PORT}
    env_file: .env
    networks:
      app-network:
        ipv4_address: 173.17.0.5

  configSrv:
    image: mongo:latest
    container_name: configSrv 
    restart: always
    env_file: .env
    ports:
      - ${MONGO_CFG_SERVER_PORT}:${MONGO_CFG_SERVER_PORT}
    networks:
      app-network:
        ipv4_address: 173.17.0.10
    volumes:
      - config-data:/data/db
    command:
      [
        "--configsvr",
        "--replSet",
        "config_server",
        "--bind_ip_all",
        "--port",
        "${MONGO_CFG_SERVER_PORT}"
      ] 
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  shard1:
    image: mongo:latest
    container_name: shard1
    restart: always
    env_file: .env
    ports:
      - ${MONGO_SHARD1_PORT}:${MONGO_SHARD1_PORT}
    networks:
      app-network:
        ipv4_address: 173.17.0.9
    volumes:
      - shard1-data:/data/db
    command:
      [
        "--shardsvr",
        "--replSet",
        "shard1",
        "--bind_ip_all",
        "--port",
        "${MONGO_SHARD1_PORT}"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  shard2:
    image: mongo:latest
    container_name: shard2
    restart: always
    env_file: .env
    ports:
      - ${MONGO_SHARD2_PORT}:${MONGO_SHARD2_PORT}
    networks:
      app-network:
        ipv4_address: 173.17.0.8
    volumes:
      - shard2-data:/data/db
    command:
      [
        "--shardsvr",
        "--replSet",
        "shard2",
        "--bind_ip_all",
        "--port",
        "${MONGO_SHARD2_PORT}"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s
  
  mongos_router:
    image: mongo:latest
    container_name: mongos_router
    restart: always
    env_file: .env
    ports:
      - ${MONGO_ROUTER_PORT}:${MONGO_ROUTER_PORT}
    networks:
      app-network:
        ipv4_address: 173.17.0.7
    command:
      [
        "mongos",
        "--configdb",
        "config_server/configSrv:${MONGO_CFG_SERVER_PORT}",
        "--bind_ip_all",
        "--port",
        "${MONGO_ROUTER_PORT}"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

networks:
  app-network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 173.17.0.0/16

volumes:
  config-data:
  shard1-data:
  shard2-data:
